// factory design pattern

// what type of patter is it?
creational pattern

// why?
one of the best ways to create an object

// why used?
to create object; without revealing "creation logic" to client

// how is object referred?
through a common interface

// java implementation of factory pattern

step 1 -- create an interface -- IShape
step 2 -- create concrete classes that implement interface
step 3 -- create ShapeFactory class that will create objects based on certain criteria

public class ShapeFactory {
	
	public IShape GetShape(String shapeType) {
		//logic
	}
}

step 4 - use factory to generate objects

ShapeFactory shapeFactory = new ShapeFactory();

IShape object = shapeFactory.GetShape("Circle");
object.Draw();
// this will write "inside circle's draw() function on console"
